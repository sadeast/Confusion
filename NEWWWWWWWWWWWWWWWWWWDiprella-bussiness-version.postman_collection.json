{
	"info": {
		"_postman_id": "b3f16733-09af-4a61-b8ef-f2ff4512c37a",
		"name": "Diprella-bussiness-version",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Admin-Authentication",
			"item": [
				{
					"name": "Administrator login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3cbbf46b-1a76-4d5c-8901-bf62d8642de5",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"//DEFINE VARIABLES",
									"postman.setEnvironmentVariable(\"admin-token\", jsonData.token);",
									"pm.environment.set(\"admin-profile-url\", jsonData.part_email);",
									"pm.environment.set(\"admin-id\", jsonData.id);",
									"pm.environment.set(\"admin-headline\", jsonData.headline);",
									"pm.environment.set(\"admin-email\", jsonData.email);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "email",
									"value": "admin@gmail.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "123456",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"login"
							]
						},
						"description": "`email`      : (string) - email \n\n`password`   : (string) - password"
					},
					"response": []
				},
				{
					"name": "User Progress",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2129b2e6-d392-4648-a81e-7b04ee51ac08",
								"exec": [
									"",
									"var jsonObject = xml2Json(responseBody);",
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"jsonData\", JSON.stringify(jsonData));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{admin-token}}",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							}
						],
						"url": {
							"raw": "{{url}}/profile/course/progress",
							"host": [
								"{{url}}"
							],
							"path": [
								"profile",
								"course",
								"progress"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Company-administration",
			"item": [
				{
					"name": "General-settings",
					"item": [
						{
							"name": "Update company info",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attributes\":{\n   \"name\":\" Assert-IT\",\n   \"logo_photo\":\"uploads/test/test.jpg\",\n   \"bk_photo\":\"uploads/test/test.jpg\",\n   \"headline\":\"Trust Courses is key to effective education\",\n   \"public\":true,\n   \"site\":\"https://assert-it.com\",\n   \"location\":\"445 Mount Eden Road, Mount Eden, Auckland.\"\n  }\n  \n}"
								},
								"url": {
									"raw": "{{host_api}}/company/settings/update",
									"host": [
										"{{host_api}}"
									],
									"path": [
										"company",
										"settings",
										"update"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Create Course",
			"item": [
				{
					"name": "Lector-Authentication",
					"item": [
						{
							"name": "Lecrtor login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3cbbf46b-1a76-4d5c-8901-bf62d8642de5",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"//DEFINE VARIABLES",
											"postman.setEnvironmentVariable(\"lector-token\", jsonData.token);",
											"pm.environment.set(\"lector-profile-url\", jsonData.part_email);",
											"pm.environment.set(\"lector-id\", jsonData.id);",
											"pm.environment.set(\"lector-headline\", jsonData.headline);",
											"pm.environment.set(\"lector-email\", jsonData.email);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "admin_company@mail.com",
											"type": "text"
										},
										{
											"key": "password",
											"value": "123456",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"login"
									]
								},
								"description": "`email`      : (string) - email \n\n`password`   : (string) - password"
							},
							"response": []
						},
						{
							"name": "User Progress",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2129b2e6-d392-4648-a81e-7b04ee51ac08",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{lector-token}}",
										"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
									}
								],
								"url": {
									"raw": "{{url}}/profile/course/progress",
									"host": [
										"{{url}}"
									],
									"path": [
										"profile",
										"course",
										"progress"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Step-1",
					"item": [
						{
							"name": "Get category list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "50f9db5c-aec1-4521-961b-0b66efc2c4fc",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"categoriesIDs = [];",
											"",
											"jsonData.forEach(function(post) {",
											"    categoriesIDs.add(post.id);",
											"});",
											"",
											"pm.environment.set(\"categoriesIDs\", categoriesIDs);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{lector-token}}"
									}
								],
								"url": {
									"raw": "{{url}}/category/get?category=",
									"host": [
										"{{url}}"
									],
									"path": [
										"category",
										"get"
									],
									"query": [
										{
											"key": "category",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get company style configurartion",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e40e4279-fdcb-44d8-8e49-1cece23fbb79",
										"exec": [
											"pm.test(\"Response Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{lector-token}}"
									}
								],
								"url": {
									"raw": "{{url}}/company/style/get",
									"host": [
										"{{url}}"
									],
									"path": [
										"company",
										"style",
										"get"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get company URL",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{lector-token}}"
									}
								],
								"url": {
									"raw": "{{url}}/company/get?url=demo-company",
									"host": [
										"{{url}}"
									],
									"path": [
										"company",
										"get"
									],
									"query": [
										{
											"key": "url",
											"value": "demo-company"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Category create",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7a5b021a-9d86-40ca-863e-44ff442e7392",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"// VARIABLES",
											"pm.environment.set(\"categoryId\", jsonData.id);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{lector-token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name_category",
											"value": " AngularJS",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/category/create",
									"host": [
										"{{url}}"
									],
									"path": [
										"category",
										"create"
									]
								},
								"description": "Creating new category (skill's tag) in scope of 1 step of new course creating."
							},
							"response": []
						},
						{
							"name": "Add Photo Cover",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2e0a5ee2-fdd6-4d53-ac15-766d44a23a52",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"// VARIABLES",
											"pm.environment.set(\"course-photo-cover\", jsonData.image);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{lector-token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"type": "file",
											"src": []
										},
										{
											"key": "thumb_image",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{url}}/image/upload",
									"host": [
										"{{url}}"
									],
									"path": [
										"image",
										"upload"
									]
								},
								"description": "`name_category` : (string) Category name\n\n`industry_id` : (array) - [1,2,3]  Industry id  . Use (Get industry list)"
							},
							"response": []
						},
						{
							"name": "Add Video Trailer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "702fb13d-bc19-4172-8e31-0cf648860673",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"//VARIABLES",
											"pm.environment.set(\"course-trailer\", jsonData.link_file);",
											"pm.environment.set(\"course-trailer-thumb\", jsonData.link_thumb);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{lector-token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "/Users/inahirnyy/Documents/diprella/test-data/movies/grb_2.mp4"
										}
									]
								},
								"url": {
									"raw": "{{url}}/video/upload",
									"host": [
										"{{url}}"
									],
									"path": [
										"video",
										"upload"
									]
								},
								"description": "`name_category` : (string) Category name\n\n`industry_id` : (array) - [1,2,3]  Industry id  . Use (Get industry list)"
							},
							"response": []
						},
						{
							"name": "Create course",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "fc212cad-2bdd-4218-b746-73ef91e3ebd9",
										"exec": [
											"var privacies = pm.environment.get(\"privacies\");",
											"",
											"if(!privacies) { ",
											"  privacies = [\"public\", \"private\", \"protected\"];",
											"  } else if(privacies.length == 0) {",
											"     privacies = [\"public\", \"private\", \"protected\"]; ",
											"  }",
											"  ",
											"var currentPrivacy = privacies.shift();",
											"",
											"pm.environment.set(\"privacy\", currentPrivacy);",
											"pm.environment.set(\"privacies\", privacies);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8d4c491d-2ff5-4d6a-9342-f7be5737120b",
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"//GET VARIABLES",
											"var privacies = pm.environment.get(\"privacies\");",
											"var privacy = pm.environment.get(\"privacy\");",
											"var ext_api = pm.environment.get(\"ext_api\");",
											"",
											"//DEFINE VARIABLES",
											"pm.environment.set(privacy+\"-course-id\", jsonData.id);",
											"",
											"//TESTS",
											"pm.test(\"Responce body should have property\", function () {",
											"    pm.expect(jsonData).to.have.property(\"id\").and.not.null;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{lector-token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "Wnat are the benefits of using AngularJS?",
											"type": "text"
										},
										{
											"key": "level",
											"value": "begginer",
											"type": "text"
										},
										{
											"key": "categories_id[]",
											"value": "{{categoryId}}",
											"type": "text"
										},
										{
											"key": "privacy",
											"value": "{{privacy}}",
											"type": "text"
										},
										{
											"key": "description",
											"value": "Client-Server\nThe client-server constraint works on the concept that the client and the server should be separate from each other and allowed to evolve individually and independently. In other words, I should be able to make changes to my mobile application without impacting either the data structure or the database design on the server. At the same time, I should be able to modify the database or make changes to my server application without impacting the mobile client. This creates a separation of \nconcerns, letting each application grow and scale independently of the other and allowing your organization to grow quickly and efficiently.\n\nStateless\nREST APIs are stateless, meaning that calls can be made independently of one another, and each call contains all of the data necessary to complete itself successfully. A REST API should not rely on data being stored on the server or sessions to determine what to do with a call, but rather solely rely on the data that is provided in that call itself. Identifying information is not being stored on the server when making calls. Instead, each call has the necessary data in itself, such as the API key, access token, user ID, etc. This also helps increase the API’s reliability by having all of the data necessary to make the call, instead of relying on a series of calls with server state to create an object, which may result in partial fails. Instead, in order to reduce memory requirements and keep your application as scalable as possible, a RESTful API requires that any state is stored on the client—not on the server.\n\nCache\nBecause a stateless API can increase request overhead by handling large loads of incoming and outbound calls, a REST API should be designed to encourage the storage of cacheable data. This means that when data is cacheable, the response should indicate that the data can be stored up to a certain time (expires-at), or in cases where data needs to be real-time, that the response should not be cached by the client. By enabling this critical constraint, you will not only greatly reduce the number of interactions with your API, reducing internal server usage, but also provide your API users with the tools necessary to provide the fastest and most efficient apps possible. Keep in mind that caching is done on the client side. While you may be able to cache some data within your architecture to perform overall performance, the intent is to instruct the client on how it should proceed and whether or not the client can store the data temporarily.\n\nUniform Interface\nThe key to the decoupling client from server is having a uniform interface that allows independent evolution of the application without having the application’s services, models, or actions tightly coupled to the API layer itself. The uniform interface lets the client talk to the server in a single language, independent of the architectural backend of either. This interface should provide an unchanging, standardized means of communicating between the client and the server, such as using HTTP with URI resources, CRUD (Create, Read, Update, Delete), and JSON.\n\nLayered System\nAs the name implies, a layered system is a system comprised of layers, with each layer having a specific functionality and responsibility. If we think of a Model View Controller framework, each layer has its own responsibilities, with the models comprising how the data should be formed, the controller focusing on the incoming actions and the view focusing on the output. Each layer is separate but also interacts with the other. In REST API design, the same principle holds true, with different layers of the architecture working together to build a hierarchy that helps create a more scalable and modular application.\nA layered system also lets you encapsulate legacy systems and move less commonly accessed functionality to a shared intermediary while also shielding more modern and commonly used components from them. Additionally, the layered system gives you the freedom to move systems in and out of your architecture as technologies and services evolve, increasing flexibility and longevity as long as you keep the different modules as loosely coupled as possible. There are substantial security benefits of having a layered system since it allows you to stop attacks at the proxy layer, or within other layers, preventing them from getting to your actual server architecture. By utilizing a layered system with a proxy, or creating a single point of access, you are able to keep critical and more vulnerable aspects of your architecture behind a firewall, preventing direct interaction with them by the client. Keep in mind that security is not based on single “stop all” solution, but rather on having multiple layers with the understanding that certain security checks may fail or be bypassed. As such, the more security you are able to implement into your system, the more likely you are to prevent damaging Attacks.\n",
											"type": "text"
										},
										{
											"key": "lang",
											"value": "eng",
											"type": "text"
										},
										{
											"key": "owner_type",
											"value": "company",
											"type": "text"
										},
										{
											"key": "image",
											"value": "{{course-photo-cover}}",
											"type": "text"
										},
										{
											"key": "thumb_image",
											"value": "{{course-photo-cover}}",
											"type": "text"
										},
										{
											"key": "video_cover",
											"value": "{{course-trailer}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/course/create",
									"host": [
										"{{url}}"
									],
									"path": [
										"course",
										"create"
									]
								},
								"description": "`title` : (string) - Course title\n\n`image` : (string) - Link file .  Use api (Upload image with thumb)\n\n`level` : (string) - Level course ['beginner', 'intermediate', 'advanced', 'not-selected']\n\n`industry_id` : (array) - [1,2,3]  Industry id  . Use (Get industry list)"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Step-2",
					"item": [
						{
							"name": "Content",
							"item": [
								{
									"name": "Get module list",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3c3cc756-8e0e-4269-a2bb-dbbbae1cdab8",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"modulesIDs = [];",
													"",
													"jsonData.modules.forEach(function(post) {",
													"    modulesIDs.add(post.id);",
													"});",
													"",
													"pm.environment.set(\"modulesIDs\", modulesIDs);",
													"",
													"postman.setEnvironmentVariable(\"public-course-module-id\", jsonData.modules[0].id);",
													"postman.setEnvironmentVariable(\"public-course-module-order\", jsonData.modules[0].order_id);",
													"",
													"//TESTS",
													"//  pm.test(\"Check if Modules is an array and is not empty\", function () {",
													"//     pm.expect(jsonData.modules).to.be.an('array').and.not.empty;",
													"//  });",
													" ",
													" ",
													"pm.test(\"Expected ID=5 to be part of previously created array\", function () {",
													"    pm.expect(5).to.be.oneOf(pm.environment.get(\"modulesIDs\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{lector-token}}"
											}
										],
										"url": {
											"raw": "{{url}}/course/module/list?course_id={{public-course-id}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"course",
												"module",
												"list"
											],
											"query": [
												{
													"key": "course_id",
													"value": "{{public-course-id}}"
												}
											]
										},
										"description": "`course_id`: (int) Course id"
									},
									"response": []
								},
								{
									"name": "Upload Article File",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2cb83d90-498f-4f89-8861-e1220d19ee1f",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"postman.setEnvironmentVariable(\"public-course-article-file-id\", jsonData[0].id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"disabled": true
											},
											{
												"key": "Authorization",
												"value": "Bearer {{lector-token}}"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/Users/inahirnyy/Documents/diprella/test-data/Використання Метрик в Тестування та Кількісні Показники.pdf"
												},
												{
													"key": "course_id",
													"value": "{{public_course-id}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}/files/upload",
											"host": [
												"{{url}}"
											],
											"path": [
												"files",
												"upload"
											]
										},
										"description": "`course_id` :(int) Course id \n\n`module_id` : (int) Module id with course\n\n`title`   : (string)  Article title\n\n`article` : (string) Article\n\n`files` : (array) [1,2,3] File id . Use (Upload files api)\n\n`expected_time`: (int) Time in seconds"
									},
									"response": []
								},
								{
									"name": "Create Article",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1a56acf4-9a68-4385-831c-11c1824581e6",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"postman.setEnvironmentVariable(\"public-course-article-article-title\", jsonData.title);",
													"postman.setEnvironmentVariable(\"public-course-article-article-id\", jsonData.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"disabled": true
											},
											{
												"key": "Authorization",
												"value": "Bearer {{lector-token}}"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "course_id",
													"value": "{{public-course-id}}",
													"type": "text"
												},
												{
													"key": "module_id",
													"value": "{{public-course-module}}",
													"type": "text"
												},
												{
													"key": "title",
													"value": "My article title",
													"type": "text"
												},
												{
													"key": "expected_time",
													"value": "1200",
													"type": "text"
												},
												{
													"key": "article",
													"value": "public-course-module",
													"type": "text"
												},
												{
													"key": "files_id[]",
													"value": "{{public-course-article-file-id}}",
													"type": "text"
												},
												{
													"key": "type",
													"value": "article",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}/article/create",
											"host": [
												"{{url}}"
											],
											"path": [
												"article",
												"create"
											]
										},
										"description": "`course_id` :(int) Course id \n\n`module_id` : (int) Module id with course\n\n`title`   : (string)  Article title\n\n`article` : (string) Article\n\n`files` : (array) [1,2,3] File id . Use (Upload files api)\n\n`expected_time`: (int) Time in seconds"
									},
									"response": []
								},
								{
									"name": "Get module list [2]",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3c3cc756-8e0e-4269-a2bb-dbbbae1cdab8",
												"exec": [
													"var jsonData = pm.response.json();",
													"var articleTitle = pm.environment.get(\"public-course-article-article-title\");",
													"",
													"modulesLessonTitles = [];",
													"//modulesLessonTitles2 = [];",
													"",
													"jsonData.modules.forEach(function (obj) {",
													"    obj.module_lessons.forEach(function (module) {",
													"        //modulesLessonTitles.push('\"'+module.title+'\"');",
													"        modulesLessonTitles.push(module.title);",
													"    });",
													"});",
													"",
													"//pm.environment.set(\"modulesLessonTitles\", JSON.stringify(modulesLessonTitles));",
													"pm.environment.set(\"modulesLessonTitles\",modulesLessonTitles);",
													"",
													"//TESTS",
													"//  pm.test(\"Check if Modules is an array and is not empty\", function () {",
													"//     pm.expect(jsonData.modules).to.be.an('array').and.not.empty;",
													"",
													"//  });",
													" ",
													" ",
													"pm.test(\"check if module contains Article previously created\", function () {",
													"    //pm.expect(pm.environment.get(\"public-course-article-article-title\")).to.be.oneOf([\"My article title\", \"test2\"]);",
													"    ",
													"    pm.expect(pm.environment.get(\"public-course-article-article-title\")).to.be.oneOf(pm.environment.get(\"modulesLessonTitles\"));",
													"});",
													"",
													"// pm.test('The `module` filter returns the correct result', () => {",
													"//     _.each(jsonData.modules, (module) => {",
													"//         _.each(module.module_lessons, (lesson) => {",
													"//             pm.expect(lesson.title).to.equal('My article title');",
													"//          });",
													"//     });",
													"// });",
													"",
													"pm.environment.set(\"modules-count\", jsonData.modules.length);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{lector-token}}"
											}
										],
										"url": {
											"raw": "{{url}}/course/module/list?course_id={{public-course-id}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"course",
												"module",
												"list"
											],
											"query": [
												{
													"key": "course_id",
													"value": "{{public-course-id}}"
												}
											]
										},
										"description": "`course_id`: (int) Course id"
									},
									"response": []
								},
								{
									"name": "Create module",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "85438908-8316-4e5d-999d-bba361a0d6fa",
												"exec": [
													"var jsonData = pm.response.json();",
													"postman.setEnvironmentVariable(\"public-course-newly-module-id\", jsonData.id);",
													"postman.setEnvironmentVariable(\"public-course-newly-module-name\", jsonData.name);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"disabled": true
											},
											{
												"key": "Authorization",
												"value": "Bearer {{lector-token}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "course_id",
													"value": "{{public-course-id}}",
													"type": "text"
												},
												{
													"key": "title",
													"value": "Awesome Module",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}/course/module/create",
											"host": [
												"{{url}}"
											],
											"path": [
												"course",
												"module",
												"create"
											]
										},
										"description": "`course_id` :(int) Course id\n\n`title`     :(string) Module title"
									},
									"response": []
								},
								{
									"name": "Get module list [3]",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3c3cc756-8e0e-4269-a2bb-dbbbae1cdab8",
												"exec": [
													"var jsonData = pm.response.json();",
													"",
													"//TESTS",
													" pm.test(\"Check if Modules is an array and is not empty\", function () {",
													"    pm.expect(jsonData.modules).to.be.an('array').and.not.empty;",
													" });",
													" ",
													" ",
													"pm.test(\"Newly created Module id is not part of previously created modules\", function () {",
													"    pm.expect(pm.environment.get(\"public-course-newly-module-id\")).not.to.be.oneOf(pm.environment.get(\"modulesIDs\"));",
													"});",
													"",
													"",
													"pm.test(\"Your test name\", function () {",
													"    pm.expect(pm.environment.get(\"public-course-modules-count\")).to.eql(jsonData.modules.length-1);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{lector-token}}"
											}
										],
										"url": {
											"raw": "{{url}}/course/module/list?course_id={{public-course-id}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"course",
												"module",
												"list"
											],
											"query": [
												{
													"key": "course_id",
													"value": "{{public-course-id}}"
												}
											]
										},
										"description": "`course_id`: (int) Course id"
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Module",
							"item": [
								{
									"name": "Delete module",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											}
										],
										"url": {
											"raw": "{{host_api}}/course/module/delete?course_id=1&module_id=1",
											"host": [
												"{{host_api}}"
											],
											"path": [
												"course",
												"module",
												"delete"
											],
											"query": [
												{
													"key": "course_id",
													"value": "1"
												},
												{
													"key": "module_id",
													"value": "1"
												}
											]
										},
										"description": "`course_id` : (int) Course id \n`module_id` : (int) Module id"
									},
									"response": []
								},
								{
									"name": "Edit module",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"course_id\":1,\n  \"module_id\":1,\n  \"title\":\"update title\"\n}"
										},
										"url": {
											"raw": "{{host_api}}/course/module/edit",
											"host": [
												"{{host_api}}"
											],
											"path": [
												"course",
												"module",
												"edit"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update order lessons in module",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"course_id\":3,\n  \"attributes\":[\n    { \"order_id\":1},\n      { \"order_id\":3},\n    { \"order_id\":2}\n  ]\n}"
										},
										"url": {
											"raw": "{{host_api}}/module/lessons/order/update",
											"host": [
												"{{host_api}}"
											],
											"path": [
												"module",
												"lessons",
												"order",
												"update"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Article",
							"item": [
								{
									"name": "Get article list",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											}
										],
										"url": {
											"raw": "{{url}}/profile/article/list",
											"host": [
												"{{url}}"
											],
											"path": [
												"profile",
												"article",
												"list"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get article",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											}
										],
										"url": {
											"raw": "{{url}}/article/get?course_id=1&module_id=1&article_id=10",
											"host": [
												"{{url}}"
											],
											"path": [
												"article",
												"get"
											],
											"query": [
												{
													"key": "course_id",
													"value": "1"
												},
												{
													"key": "module_id",
													"value": "1"
												},
												{
													"key": "article_id",
													"value": "10"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Edit article",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"course_id\":1,  \n  \"article_id\" : 1,\n  \"attributes\":{\n       \"title\":\"test update\",\n       \"article\":\"article update\",\n       \"expected_time\" : 300\n  },\n  \"attachment\":[1,2]\n}"
										},
										"url": {
											"raw": "{{host_api}}/article/edit",
											"host": [
												"{{host_api}}"
											],
											"path": [
												"article",
												"edit"
											]
										},
										"description": "`course_id`: (int) course id\n\n`article_id`: (int) article id\n\n`attributes`: (array) update attributes\n\n`attachment`:(array) File id"
									},
									"response": []
								},
								{
									"name": "Create article from list ",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"article_param\":[\n   {\n    \"course_id\":1,\n    \"module_id\":1,\n    \"article_id\":2\n   }  \n  ]\n}"
										},
										"url": {
											"raw": "{{host_api}}/list/article/create",
											"host": [
												"{{host_api}}"
											],
											"path": [
												"list",
												"article",
												"create"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Quiz",
							"item": [
								{
									"name": "Quiz category",
									"item": [
										{
											"name": "Create category",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token}}"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"category_name\":\"quiz category\"\n}"
												},
												"url": {
													"raw": "{{host_api}}/quiz/category/create",
													"host": [
														"{{host_api}}"
													],
													"path": [
														"quiz",
														"category",
														"create"
													]
												}
											},
											"response": []
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "Quiz create",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"course_id\":1,\n\"module_id\":1,\n\"title\":\"test quidsfsdfsdfsdz\",\n\"date_from\":\"2011-05-11\",\n\"date_to\":\"2022-05-11\",\n\"difficulty\":\"beginer\",\n\"detailed_result\":true,\n\"time_limit\":3600,\n\"attempts\":3,\n\"order_question\":\"random\",\n\"point\":12,\n\"q_point\":3,\n\"description\":\"tets trvvjgvskjdfvsclfghsdkjgcjbh\",\n\"question\":[{\"name\":\"How are you?\"}],\n\"question_id\":[]\n}"
										},
										"url": {
											"raw": "{{host_api}}/quiz/create",
											"host": [
												"{{host_api}}"
											],
											"path": [
												"quiz",
												"create"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get quiz question",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											}
										],
										"url": {
											"raw": "{{host_api}}/quiz/question/get?course_id=1&module_id=1&quiz_id=2",
											"host": [
												"{{host_api}}"
											],
											"path": [
												"quiz",
												"question",
												"get"
											],
											"query": [
												{
													"key": "course_id",
													"value": "1"
												},
												{
													"key": "module_id",
													"value": "1"
												},
												{
													"key": "quiz_id",
													"value": "2"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Edit quiz ",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"course_id\":1,\n  \"quiz_id\":1,\n  \"attributes\":{\n    \"difficulty\":\"advanced\",\n    \"description\":\"edit description\"\n  }\n  \n}"
										},
										"url": {
											"raw": "{{host_api}}/quiz/edit",
											"host": [
												"{{host_api}}"
											],
											"path": [
												"quiz",
												"edit"
											]
										}
									},
									"response": []
								},
								{
									"name": "Quiz delete ",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"quiz_id\":3\n  \n}"
										},
										"url": {
											"raw": "{{host_api}}/quiz/delete",
											"host": [
												"{{host_api}}"
											],
											"path": [
												"quiz",
												"delete"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get quiz ",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											}
										],
										"url": {
											"raw": "{{host_api}}/quiz/get?course_id=1&module_id=1&quiz_id=1",
											"host": [
												"{{host_api}}"
											],
											"path": [
												"quiz",
												"get"
											],
											"query": [
												{
													"key": "course_id",
													"value": "1"
												},
												{
													"key": "module_id",
													"value": "1"
												},
												{
													"key": "quiz_id",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create quiz from list",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"quiz_param\":[\n  {\n    \"course_id\":1,\n    \"module_id\":1,\n    \"quiz_id\":1\n  }\n  ]  \n}\n"
										},
										"url": {
											"raw": "{{host_api}}/list/quiz/create",
											"host": [
												"{{host_api}}"
											],
											"path": [
												"list",
												"quiz",
												"create"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Event",
							"item": [
								{
									"name": "Event create",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"course_id\":1,\n  \"module_id\":1,\n  \"title\":\"webinar2\",\n  \"date_from\":\"2019-12-12\",\n  \"description\":\"test\",\n  \"duration\":3600,\n  \"timezone\":\"ua\",\n  \"start_time\":\"18:22:22\",\n  \"timezone_region\":\"Europe/Kiev\",\n  \"type\":\"webinar\",\n  \"files_id\":[\n    {\n      \"id\":1,\n      \"type\":\"public\"\n    }\n  ]\n}"
										},
										"url": {
											"raw": "{{host_api}}/event/create",
											"host": [
												"{{host_api}}"
											],
											"path": [
												"event",
												"create"
											]
										}
									},
									"response": []
								},
								{
									"name": "Event image list",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											}
										],
										"url": {
											"raw": "{{host_api}}/event/image/list?course_id=1&module_id=1&event_id=10",
											"host": [
												"{{host_api}}"
											],
											"path": [
												"event",
												"image",
												"list"
											],
											"query": [
												{
													"key": "course_id",
													"value": "1"
												},
												{
													"key": "module_id",
													"value": "1"
												},
												{
													"key": "event_id",
													"value": "10"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Event image save",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "course_id",
													"value": "1",
													"type": "text"
												},
												{
													"key": "module_id",
													"value": "1",
													"type": "text"
												},
												{
													"key": "event_id",
													"value": "1",
													"type": "text"
												},
												{
													"key": "file",
													"value": "",
													"type": "file"
												}
											]
										},
										"url": {
											"raw": "{{host_api}}/event/image/save",
											"host": [
												"{{host_api}}"
											],
											"path": [
												"event",
												"image",
												"save"
											]
										}
									},
									"response": []
								},
								{
									"name": "Event image delete",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											}
										],
										"url": {
											"raw": "{{host_api}}/event/image/delete?course_id=1&event_id=1&module_id=1&file_id=10&perm_delete=true",
											"host": [
												"{{host_api}}"
											],
											"path": [
												"event",
												"image",
												"delete"
											],
											"query": [
												{
													"key": "course_id",
													"value": "1"
												},
												{
													"key": "event_id",
													"value": "1"
												},
												{
													"key": "module_id",
													"value": "1"
												},
												{
													"key": "file_id",
													"value": "10"
												},
												{
													"key": "perm_delete",
													"value": "true"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get files event",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											}
										],
										"url": {
											"raw": "{{host_api}}/event/files/get?course_id=1&module_id=1&event_id=6",
											"host": [
												"{{host_api}}"
											],
											"path": [
												"event",
												"files",
												"get"
											],
											"query": [
												{
													"key": "course_id",
													"value": "1"
												},
												{
													"key": "module_id",
													"value": "1"
												},
												{
													"key": "event_id",
													"value": "6"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Event edit",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"course_id\":1,\n  \"event_id\":3,\n  \"attributes\" : {\n    \"title\" : \"update title\",  \n    \"description\" : \"update  description\",\n    \"duration\":3600,\n    \"date_from\":\"2019-12-12\",\n      \"timezone\":\"ua\",\n    \"start_time\":\"18:22:22\",\n    \"timezone_region\":\"Europe/Kiev\",\n     \"type\":\"webinar\"\n  },\n  \"attachment\" :[\n    {\"id\":1,\"type\": \"private\"},\n    {\"id\":2,\"type\": \"public\"}\n  ]\n}"
										},
										"url": {
											"raw": "{{host_api}}/event/edit",
											"host": [
												"{{host_api}}"
											],
											"path": [
												"event",
												"edit"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get event title",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											}
										],
										"url": {
											"raw": "{{host_api}}/dashboard/event/title?event_id=1",
											"host": [
												"{{host_api}}"
											],
											"path": [
												"dashboard",
												"event",
												"title"
											],
											"query": [
												{
													"key": "event_id",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get event",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											}
										],
										"url": {
											"raw": "{{host_api}}/event/get?course_id=1&module_id=1&event_id=1",
											"host": [
												"{{host_api}}"
											],
											"path": [
												"event",
												"get"
											],
											"query": [
												{
													"key": "course_id",
													"value": "1"
												},
												{
													"key": "module_id",
													"value": "1"
												},
												{
													"key": "event_id",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Save note with event",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"course_id\":3,\n  \"module_id\":4,\n  \"event_id\":1,\n  \"type\":\"webinar\",\n  \"note\":\"test note note test\"\n  \n  \n}"
										},
										"url": {
											"raw": "{{host_api}}/event/note/save",
											"host": [
												"{{host_api}}"
											],
											"path": [
												"event",
												"note",
												"save"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Step-3",
					"item": [
						{
							"name": "Invite user to course",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"url": {
									"raw": "{{host_api}}/user/invite/course?course_id=1&email=userrrr3434@gmail.com&status=1",
									"host": [
										"{{host_api}}"
									],
									"path": [
										"user",
										"invite",
										"course"
									],
									"query": [
										{
											"key": "course_id",
											"value": "1"
										},
										{
											"key": "email",
											"value": "userrrr3434@gmail.com"
										},
										{
											"key": "status",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Course publish ",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"course_id\":1,\n  \"cert\":true\n}"
								},
								"url": {
									"raw": "{{host_api}}/course/settings",
									"host": [
										"{{host_api}}"
									],
									"path": [
										"course",
										"settings"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create necessary lesson",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"necessary_lessons\":[\n    {\n     \"course_id\":1,\n     \"module_id\":1,\n     \"event_id\":1,\n     \"type\":\"article\",\n     \"necessary\":false\n    }  \n  ]\n  \n}"
								},
								"url": {
									"raw": "{{host_api}}/lesson/necessary/create",
									"host": [
										"{{host_api}}"
									],
									"path": [
										"lesson",
										"necessary",
										"create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get course necessary %",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"url": {
									"raw": "{{host_api}}/course/necessary/get?course_id=1",
									"host": [
										"{{host_api}}"
									],
									"path": [
										"course",
										"necessary",
										"get"
									],
									"query": [
										{
											"key": "course_id",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Invite",
					"item": [
						{
							"name": "Invite user to course",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"course_id\":1,\n  \"email\":\"test@mail.com\",\n  \"status\":true\n}"
								},
								"url": {
									"raw": "{{host_api}}/user/invite/course",
									"host": [
										"{{host_api}}"
									],
									"path": [
										"user",
										"invite",
										"course"
									]
								}
							},
							"response": []
						},
						{
							"name": "Invite lecturer to course",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"param_invite\":[\n   {\n     \"course_id\":2,\n     \"module_id\":1,\n     \"event_id\":1,\n     \"email\":\"company_member@gmail.com\",\n     \"type\":\"article\"\n   }\n    \n  ]\n}"
								},
								"url": {
									"raw": "{{host_api}}/course/invite/lecture",
									"host": [
										"{{host_api}}"
									],
									"path": [
										"course",
										"invite",
										"lecture"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Comments",
					"item": [
						{
							"name": "Article",
							"item": [
								{
									"name": "Add comment ",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"course_id\":1,\n\"module_id\":1,\n\"article_id\":1,\n\"timezone\":3600,\n\"comment\":\"ola\",\n\"parent_id\":0,\n\"created_at\":\"2018-10-22 13:20:13\"\n}"
										},
										"url": {
											"raw": "{{host_api}}/article/add/comment",
											"host": [
												"{{host_api}}"
											],
											"path": [
												"article",
												"add",
												"comment"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get comments",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											}
										],
										"url": {
											"raw": "{{host_api}}/article/comment/get?course_id=1&module_id=1&article_id=1",
											"host": [
												"{{host_api}}"
											],
											"path": [
												"article",
												"comment",
												"get"
											],
											"query": [
												{
													"key": "course_id",
													"value": "1"
												},
												{
													"key": "module_id",
													"value": "1"
												},
												{
													"key": "article_id",
													"value": "1"
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Course",
							"item": [
								{
									"name": "Add comment",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"course_id\":1,\n\"timezone\":3600,\n\"comment\":\"ola\",\n\"parent_id\":0,\n\"created_at\":\"2018-10-22 13:20:13\"\n}"
										},
										"url": {
											"raw": "{{host_api}}/course/add/comment",
											"host": [
												"{{host_api}}"
											],
											"path": [
												"course",
												"add",
												"comment"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get comments",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host_api}}/course/comment/get?course_id=1",
											"host": [
												"{{host_api}}"
											],
											"path": [
												"course",
												"comment",
												"get"
											],
											"query": [
												{
													"key": "course_id",
													"value": "1"
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Get course by id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{host_api}}/get/course?course_id=1",
							"host": [
								"{{host_api}}"
							],
							"path": [
								"get",
								"course"
							],
							"query": [
								{
									"key": "course_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get public lessons",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{host_api}}/course/public/lessons",
							"host": [
								"{{host_api}}"
							],
							"path": [
								"course",
								"public",
								"lessons"
							]
						}
					},
					"response": []
				},
				{
					"name": "Event completed",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"course_id\":1,\n\"module_id\":1,\n\"event_id\":1,\n\"type_lesson\":\"article\",\n\"status\":2,\n\"passing_time\":11231\n}"
						},
						"url": {
							"raw": "{{host_api}}/event/complected",
							"host": [
								"{{host_api}}"
							],
							"path": [
								"event",
								"complected"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "84a65d41-9e1f-4d7e-b3ef-12530e7734d2",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "1b907ca6-2a93-4cd1-9895-29599ef60a31",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201,202]);",
							"});"
						]
					}
				}
			]
		}
	]
}